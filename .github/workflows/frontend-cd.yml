name: CD - Deploy Frontend


on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - frontend/react/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/react
    steps:
      - uses: actions/checkout@v2

      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build the Docker image
        run: |
          docker build . \
          --file Dockerfile \
          --tag ${{secrets.DOCKER_HUB_USERNAME}}/robinsonir-react:${{steps.build-number.outputs.BUILD_NUMBER}} \
          --build-arg api_base_url=http://http://robinsonir-api-env.eba-aebgw6jr.us-east-1.elasticbeanstalk.com/8080
      - name: Publish docker image to docker hub
        run: docker push ${{secrets.DOCKER_HUB_USERNAME}}/robinsonir-react:${{steps.build-number.outputs.BUILD_NUMBER}}
      - name: Build Docker image with latest tag
        run: |
          docker build . \
          --file Dockerfile \
          --tag ${{secrets.DOCKER_HUB_USERNAME}}/robinsonir-react:latest \
          --build-arg api_base_url=http://fitness-tracker-env.eba-3f5efq3k.us-east-1.elasticbeanstalk.com:8080
      - name: Publish docker image to docker hub
        run: docker push ${{secrets.DOCKER_HUB_USERNAME}}/robinsonir-react:latest
      - name: Configure AWS Credentials
        run: |
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Check Elastic Beanstalk Environment Status
        id: eb-status
        run: |
         # Check Elastic Beanstalk environment status
         status=$(aws elasticbeanstalk describe-environments --environment-names ${{ secrets.EB_ENVIRONMENT_NAME }} --query 'Environments[0].Status' --output text)
         echo "Elastic Beanstalk Status: $status"
         echo "::set-output name=status::$status"

      - name: Wait for Elastic Beanstalk to Be Ready
        run: |
           status=${{ steps.eb-status.outputs.status }}
           if [ "$status" != "Ready" ]; then
             echo "Waiting for Elastic Beanstalk environment to be ready..."
             sleep 120  # 120 seconds = 2 minutes (adjust as needed)
           else
             echo "Elastic Beanstalk environment is already in a ready state."
           fi
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 60
